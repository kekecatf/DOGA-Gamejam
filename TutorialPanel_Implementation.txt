TUTORIAL PANEL OLUŞTURMA VE ENTEGRASYON REHBERİ

1. TUTORIAL MANAGER KURULUMU

   a) Scripts Klasöründe TutorialManager.cs Oluşturuldu
      - Bu script, oyun başlangıcında tutorial paneli göstermekten sorumludur
      - Oyun 5 saniye boyunca durdurulur ve oyun kontrolleri gösterilir
   
   b) TutorialManager'ı GameInitializer.cs'ye Entegre Edin
      - Unity içerisinde, GameInitializer nesnesini bulun (sahne içi veya prefab)
      - TutorialManager.cs script'ini projenizdeki bu GameObject'e referans olarak atayın

2. TUTORIAL PANEL PREFAB OLUŞTURMA
   
   a) Canvas Oluşturma
      - Hierarchy panelinde: Create > UI > Canvas
      - Canvas'ın adını "TutorialCanvas" olarak değiştirin
      - Canvas Scaler'ı "Scale With Screen Size" olarak ayarlayın (Reference Resolution: 1920x1080)
   
   b) Panel Oluşturma
      - TutorialCanvas içinde: Create > UI > Panel
      - Panel'i "TutorialPanel" olarak yeniden adlandırın
      - Rect Transform'u ayarlayın (Canvas'ın ortasında, genişlik: 800, yükseklik: 600)
      - Panel'e uygun bir arka plan rengi atayın (Alpha: 0.9)
   
   c) Başlık Ekleme
      - Panel içinde: Create > UI > Text - TextMeshPro
      - Text'i "HeaderText" olarak yeniden adlandırın
      - "OYUN KONTROLLERİ" yazın, fontunu büyütün (36pt) ve ortalayın
      - Üstte konumlandırın (Y: 250)
   
   d) Tuş Görselleri ve Açıklamaları Ekleme
      - Panel içinde her tuş kontrolü için bir grup oluşturun
      - Örnek: Z tuşu görseli ve açıklaması
        * Create > UI > Image (tuş görseli için)
        * Create > UI > Text - TextMeshPro (açıklama için)
        * Görsel için "Z" harfi olan bir sprite atayın
        * Açıklama için "Z Tuşu: Ateş etmek için kullanılır (Minigun)" yazın
      
      - Aynı şekilde diğer tuşlar için de gruplar oluşturun:
        * X tuşu ve açıklaması
        * Yön tuşları ve açıklaması
        * WASD tuşları ve açıklaması
   
   e) Devam Et Butonu
      - Panel içinde: Create > UI > Button
      - Butonu "ContinueButton" olarak yeniden adlandırın
      - Buton metnini "DEVAM ET" olarak değiştirin
      - Buton ClickEvent'ini TutorialManager.CloseTutorialPanel() metoduna bağlayın
      - Panelin altına konumlandırın (Y: -250)

3. TUTORIAL MANAGER BILEŞENINE REFERANSLARI ATAMA
   
   a) Oluşturduğunuz TutorialPanel prefabını seçin
   
   b) Inspector panelinde "Add Component" > TutorialManager scriptini ekleyin
   
   c) TutorialManager bileşeni içindeki tüm referansları doldurun:
      - Tutorial Panel: Oluşturduğunuz TutorialPanel GameObject'ini sürükleyin
      - Tuş Açıklamaları: Tüm TextMeshProUGUI bileşenlerini ilgili alanlara sürükleyin
      - Tuş Görselleri: Tüm Image bileşenlerini ilgili alanlara sürükleyin
   
   d) Tutorial Duration: 5 (saniye olarak ayarlayın)

4. PREFAB OLUŞTURMA VE ENTEGRASYON
   
   a) Oluşturduğunuz TutorialCanvas'ı prefab olarak kaydedin
      - TutorialCanvas'ı Hierarchy panelinden Project panelindeki Prefabs klasörüne sürükleyin
      - "TutorialPanel" adıyla kaydedin
   
   b) GameInitializer prefabını veya GameObject'ini seçin
      - TutorialManagerPrefab alanına oluşturduğunuz TutorialPanel prefabını sürükleyin

5. OYUN BAŞLANGICI AYARLARI

   a) Tutorial panel başlangıçta devre dışı olmalıdır
      - TutorialPanel GameObject'inin yanındaki onay işaretini kaldırın
      
   b) Oyun başlatıldığında TutorialManager.Start() metodu otomatik olarak paneli aktif edecektir
   
   c) 5 saniye sonra, veya kullanıcı "DEVAM ET" butonuna bastığında panel kapanacak ve oyun devam edecektir

NOT: Bu panel, player GameObject'inin bağlı olduğu Oynanis (gameplay) sahnesinde kullanılmalıdır. Panel oluşturulduktan sonra, Unity Editor'de test ederek görsel iyileştirmeler yapabilirsiniz. 